/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '2.7.4'
    id "io.spring.dependency-management" version "1.0.14.RELEASE"
    id 'java'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
}
repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('com.h2database:h2')
//    implementation('java:jakarta.persistence:jakarta.persistence-api')
//    implementation('java:org.hibernate:hibernate-core')
}

//bootRun{
//    springBoot {
//        mainClassName 'src.App'
//    }
//}
application {
    // Define the main class for the application.
    mainClass = 'src.App'
    springBoot {
        mainClassName 'src.App'
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
